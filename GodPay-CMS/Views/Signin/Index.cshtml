<div class="container d-flex flex-column">
    <div class="row align-items-center justify-content-center g-0 min-vh-100">
        <div class="col-12 col-md-8 col-lg-6 col-xxl-4 py-8 py-xl-0">
            <!-- Card -->
            <div class="card smooth-shadow-md">
                <!-- Card body -->
                <div class="card-body p-6">
                    <div class="mb-4">
                        <a href="../index.html"><img src="/lib/dash-ui/images/brand/logo/logo-primary.svg" class="mb-2" alt=""></a>
                        <p class="mb-6">請輸入您的資訊</p>
                    </div>
                    <!-- Form -->
                    <v-form v-slot="{ values, errors}" v-on:submit="SignIn">
                        <!-- Username  -->
                        <div class="mb-3">
                            <label for="account" class="form-label">Account</label>
                            <v-field type="text" id="account" class="form-control" name="account" placeholder="請輸入帳號"
                                     v-model.trim="UserViewModel.UserId" rules="required" v-bind:class="[{'is-invalid':errors['account']||modelState['UserId']}]"></v-field>
                            <error-message name="account" class="invalid-feedback"></error-message>
                            <server-error-message v-bind:attr="'UserId'"></server-error-message>
                        </div>
                        <!-- Password -->
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <v-field type="password" id="password" class="form-control" name="password" placeholder="請輸入密碼"
                                     v-model.trim="UserViewModel.UserKey" rules="required" v-bind:class="[{'is-invalid':errors['password']||modelState['UserKey']}]"></v-field>
                            <error-message name="password" class="invalid-feedback"></error-message>
                            <server-error-message v-bind:attr="'UserKey'"></server-error-message>
                        </div>
                        <!-- Checkbox -->
                        <div class="d-lg-flex justify-content-between align-items-center mb-4">
                            <div class="form-check custom-checkbox">
                                <input type="checkbox" class="form-check-input" id="rememberme">
                                <label class="form-check-label" for="rememberme">記住此帳號</label>
                            </div>
                        </div>
                        <div>
                            <!-- Button -->
                            <div class="d-grid">
                                <button type="submit" class="btn btn-outline-success" v-bind:disabled="Object.keys(errors).length !== 0 || !this.$common.CheckValueOfObjectIsNotEmpty(values)">Sign in</button>
                            </div>
                        </div>
                    </v-form>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
@section Vue
{
    import ServerErrorMessage from '/StaticFiles/Vue/Components/ServerErrorMessage.js'
    const app = Vue.createApp({
        components: {
            ServerErrorMessage
        },
        data: function () {
            return {
                modelState: {},
                UserViewModel: {
                    UserId: '',
                    UserKey:''
                }
            }
        },
        methods: {
            SignIn: function () {
                try {
                    axios.post('@this.Url.Action("SignIn", "SigninOperate")', this.UserViewModel)
                        .then((response) => {
                            console.log(response);
                            const responseData = response.data;
                            switch (responseData.RtnCode) {
                                case 200:
                                    let baseURL = '';
                                    @if (env.IsDevelopment())
                                    {
                                        @:baseURL = '@Configuration.GetSection("BaseUrl").Value';
                                    }
                                    window.location.href = `${baseURL}`;
                                    break;
                                case 401:
                                    this.modelState = JSON.parse(responseData.RtnData);
                                    this.$emitter.emit('ServerErrorMessages', this.modelState);
                                    break;
                                case 402:
                                    const globalMessage = { title: responseData.RtnMessage , status:'danger', message:'帳號密碼錯誤'}
                                    this.$emitter.emit('GlobalMessage', globalMessage)
                                    break;
                                default:
                                    throw new Error('代碼有誤');
                                    break;
                            }                         
                        })
                        .catch((error) => {
                            alert('登入狀況有誤，請洽詢相關人員');
                            throw new Error(error);
                        })
                }
                catch (exception) {
                    // 存入log
                    // 導去錯誤頁面
                    console.log(exception);
                }

            }
        }
    })
}
</script>
