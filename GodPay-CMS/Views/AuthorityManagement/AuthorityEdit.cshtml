@{
    ViewData["Title"] = "權限管理";
}
<div class="row p-3 justify-content-center">
    <div class="p-toolbar p-component w-98 mb-3" style="max-height: 10vh">
        <div class="col-8 justify-content-start">
        </div>
        <div class="col-4">
            <div class="d-flex justify-content-end">
                <template v-if="isEdit===false">
                    <p-button label="編輯權限" icon="bi bi-gear" class="p-button-warning p-mr-1" v-on:click="ChengeIsEdit(true)"></p-button>
                </template>
                <template v-else>
                    <p-button label="復原" icon="pi pi-refresh" class="p-button-info p-mr-1 me-1" v-on:click="Refresh"></p-button>
                    <p-button label="儲存" icon="pi pi-save" class="p-button-success p-mr-1" v-on:click=" UpdateRoleMaxAuthority"></p-button>
                </template>
               
            </div>      
        </div>
    </div>
    <div class="p-datatable p-component p-datatable-scrollable p-datatable-scrollable-vertical p-datatable-responsive-stack p-datatable-gridlines"
         data-scrollselectors=".p-datatable-wrapper">
        <div class="p-datatable-wrapper" style="max-height: 80vh">
            <table class="p-datatable-table">
                <thead class="p-datatable-thead">
                    <tr>
                        <th class="justify-content-center">
                            <div class="p-column-header-content">
                                <span class="p-column-title"></span>
                            </div>
                        </th>
                        <th style="width:22%" class="justify-content-center">
                            <div class="p-column-header-content">
                                <span class="p-column-title">管理員</span>
                            </div>
                        </th>
                        <th style="width:22%" class="justify-content-center">
                            <div class="p-column-header-content">
                                <span class="p-column-title">業務</span>
                            </div>
                        </th>
                        <th style="width:22%" class="justify-content-center">
                            <div class="p-column-header-content">
                                <span class="p-column-title">特店</span>
                            </div>
                        </th>
                        <th style="width:22%" class="justify-content-center">
                            <div class="p-column-header-content">
                                <span class="p-column-title">特店人員</span>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody class="p-datatable-tbody">
                    <template v-for="(funcclass,index) in authoritys" v-bind:key="funcclass.FuncClassEnName">
                        <tr>
                            <td colspan="5" class="bg-green-100 justify-content-center">
                                <span>{{funcclass.FuncClassChName}}</span>
                            </td>
                        </tr>
                        <template v-for="(func,index) in funcclass.Functions" v-bind:key="func.FuncEnName">
                            <tr>
                                <td>{{func.FuncChName}}</td>
                                <td class="justify-content-center">
                                    <input type="checkbox" class="p-checkbox p-component p-checkbox-checked form-check-input" value="1" v-model.number="func.RoleFlag" v-bind:disabled="!isEdit">
                                </td>
                                <td class="justify-content-center">
                                    <input type="checkbox" class="p-checkbox p-component p-checkbox-checked form-check-input" value="2" v-model.number="func.RoleFlag" v-bind:disabled="!isEdit">
                                </td>
                                <td class="justify-content-center">
                                    <input type="checkbox" class="p-checkbox p-component p-checkbox-checked form-check-input" value="4" v-model.number="func.RoleFlag" v-bind:disabled="!isEdit">
                                </td>
                                <td class="justify-content-center">
                                    <input type="checkbox" class="p-checkbox p-component p-checkbox-checked form-check-input" value="8" v-model.number="func.RoleFlag" v-bind:disabled="!isEdit">
                                </td>
                            </tr>
                        </template>
                    </template>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
@section Vue
{
    import { GetListOfFunction, UpdateRoleMaxAuthority } from '/StaticFiles/Vue/Services/IpassService.js'
    const app = Vue.createApp({
        data: function () {
            return {
                message: 'hello',
                authoritys: [],
                isEdit: false
            }
        },
        created: function () {
            this.GetListOfFunction();
        },
        methods: {
            GetListOfFunction: async function () {
                  try {
                        const response = await GetListOfFunction().then(response => response);
                        const status = response.status;
                        if (status === 200) {
                            const data = response.data;
                            const code = data.RtnCode;
                            switch (code) {
                                case 200:
                                    if (data.RtnData.length > 0) {
                                        this.authoritys = data.RtnData;
                                    }
                                    break;
                                default:
                                    break;
                            }
                        }
                    }
                  catch (exception) {
                        console.log(exception)
                  }
            },
            ChengeIsEdit: function (value) {
                this.isEdit = value;
            },
            UpdateRoleMaxAuthority: async function () {
                try {
                    const response = await UpdateRoleMaxAuthority(this.authoritys).then(response => response);
                    const status = response.status;
                    if (status === 200) {
                        const data = response.data;
                        const code = data.RtnCode;
                        const status = this.$common.ChangeReturnCode(code);
                        switch (code) {
                            case 200:
                                this.$toast.add({ severity: status, summary: data.RtnMessage, detail: data.RtnData, life: 5000, group: 'backend-laoout' });
                                break;
                            case 401:
                                console.log(response);
                                break
                            case 405:
                                this.$toast.add({ severity: status, summary: data.RtnMessage, detail: data.RtnData, life: 5000, group: 'backend-laoout' });
                                break
                            case 417:
                                this.$toast.add({ severity: status, summary: data.RtnMessage, detail: data.RtnData, life: 5000, group: 'backend-laoout' });
                                break;
                            default:
                                break;
                        }
                    }
                }
                catch (exception) {
                    console.log(exception)
                }
            },
            Refresh: function () {
                this.GetListOfFunction().then(() => {
                    this.isEdit = false;
                })
            },

        }
    })

}
</script>