@{
    ViewData["Title"] = "編輯使用者";
}
<div class="row p-3">
    <div class="col-12">
        <div class="card vh-90">
            <div class="card-body">
                <div class="col-12 mb-10">
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-outline-advanced me-1" data-bs-toggle="tooltip" data-bs-placement="top" title="編輯基本資料" v-on:click="OpenEditUserModal">
                            <i class="bi bi-pencil-square fs-4"></i>
                        </button>
                        <button type="button" class="btn btn-outline-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="變更密碼" v-on:click="OpenChangePasswordModal">
                            <i class="bi bi-gear-fill fs-4"></i>
                        </button>
                    </div>
                </div>
                <div class="col-12">
                    <div class="position-relative">
                        <div class="progress" style="height: 1px;">
                            <div class="progress-bar bg-success" role="progressbar" style="width: 100%;" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <span class="position-absolute top-0 start-50 translate-middle px-3 bg-white fw-bold fs-3 text-success">基本資料</span>
                    </div>

                    <table class="table table-responsive table-hover">
                        <tbody>
                            <tr>
                                <td>
                                    <div class="mb-3 row">
                                        <label for="staticEmail" class="col-sm-2 col-form-label">帳號</label>
                                        <div class="col-sm-10">
                                            <input type="text" readonly class="form-control-plaintext outline-none" id="staticEmail" v-bind:value="user.UserId">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-3 row">
                                        <label class="col-sm-2 col-form-label">Email</label>
                                        <div class="col-sm-10">
                                            <input type="email" readonly class="form-control-plaintext outline-none" v-bind:value="user.Email">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-3 row">
                                        <label class="col-sm-2 col-form-label">權限</label>
                                        <div class="col-sm-10">
                                            <input type="email" readonly class="form-control-plaintext outline-none" v-bind:value="user.Role" autocomplete="off">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-3 row">
                                        <label class="col-sm-2 col-form-label">狀態</label>
                                        <div class="col-sm-10">
                                            <span v-if="user.Status=='帳號啟用中'" class="badge bg-success fs-5">{{user.Status}}</span>
                                            <span v-else-if="user.Status=='帳號尚未開通'" class="badge bg-danger fs-5">{{user.Status}}</span>
                                            <span v-else class="badge bg-warning text-dark fs-5">{{user.Status}}</span>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<edit-user-modal ref="editUser" v-bind:pemail="user.Email" v-on:save="SaveProfile"></edit-user-modal>
<change-password-modal ref="changePassword"></change-password-modal>

<script type="text/javascript">
    @section Vue
    {
    import editUserModal from '/StaticFiles/Vue/Components/EditUserModal.js'
    import changePasswordModal from '/StaticFiles/Vue/Components/ChangePasswordModal.js'

    const Id = '@httpContextAccessor.HttpContext.User.Claims.SingleOrDefault(c => c.Type == ClaimTypes.Name).Value';
        const app = Vue.createApp({
            components: {
                editUserModal,
                changePasswordModal
            },
            data: function () {
                return {
                    tooltipList: [],
                    user: {
                        UserId: '',
                        Email: ''
                    },
                    EditViewModel: {
                        ModifierId: Id,
                        UserId: '',
                        Email: ''
                    }
                }
            },
            created: function () {
                 this.GetUserById();
            },
            mounted: function () {
                // tooltip
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
                this.tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })
            },
            methods: {
                OpenEditUserModal: function () {
                    this.$refs.editUser.Show();
                },
                OpenChangePasswordModal: function () {
                    this.$refs.changePassword.Show();
                },
                GetUserById: function () {
                    try {
                        axios.get('@Url.Action("Get", "ProfileApi")', {
                            params: {
                                userId: Id
                            }})
                            .then((response) => {
                                console.log(this);
                                console.log(response);
                                const data = response.data;
                                const code = data.RtnCode;
                                switch (code) {
                                    case 200:
                                        this.user = data.RtnData;
                                        break;
                                    default:
                                        break;
                                }
                            })
                            .catch((error) => {
                                alert('取得資料有誤');
                                throw new Error(error);
                            })
                    }
                    catch (exception) {
                        console.log(exception)
                    }
                },
                SaveProfile: function (value) {
                    // 確認取得值
                    // POST
                    // 關掉MODAL
                    // 成功:重新渲染 失敗:跳出提示
                    console.log(value);
                    console.log(this.$refs.editUser);
                    this.EditViewModel.Email = value;
                    this.EditViewModel.UserId = this.user.UserId;
                    try {
                        axios.post('@this.Url.Action("Edit", "ProfileApi")', this.EditViewModel)
                        .then((response) => {
                            console.log(response);
                            const responseData = response.data;
                            switch (responseData.RtnCode) {
                                case 200:
                                    this.GetUserById();
                                    this.$refs.editUser.Close();
                                    break;
                                case 401:
                                case 404:
                                case 417:
                                    if (typeof(responseData.RtnData) === 'string') {
                                        this.modelStateError = JSON.parse(responseData.RtnData);
                                    }
                                    this.$emitter.emit('ServerErrorMessages', this.modelStateError);
                                    break;
                                default:
                                    throw new Error('代碼有誤');
                                    break;
                            }
                        })
                        .catch((error) => {
                            alert('變更資料有誤，請洽詢相關人員');
                            throw new Error(error);
                        })
                    } catch (exception) {
                        console.log(exception);
                    }
                }
            }
        })
    }
</script>
