@{
    ViewData["Title"] = "特店資訊";
}
<div class="row p-3">
    <div class="col-12">
        <div class="card vh-90">
            <div class="card-body">
                <div class="col-12 mb-5">
                    <div class="d-flex justify-content-end">
                        <p-button type="button" icon="pi pi-user-edit" class="me-1 px-2" v-tooltip.top="'編輯特店資訊'" v-on:click="OpenEditStoreDetail"></p-button>
                    </div>
                </div>
                <div class="col-12">
                    <table class="table table-responsive table-hover">
                        <tbody>
                            <tr>
                                <td>
                                    <div class="mb-1 row">
                                        <label class="col-sm-2 col-form-label">公司名稱</label>
                                        <div class="col-sm-10">
                                            <input type="text" readonly class="form-control-plaintext outline-none" v-bind:value="storeDetail.customerName">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-1 row">
                                        <label class="col-sm-2 col-form-label">特店名稱</label>
                                        <div class="col-sm-10">
                                            <input type="text" readonly class="form-control-plaintext outline-none" v-bind:value="storeDetail.storeName">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-1 row">
                                        <label class="col-sm-2 col-form-label">統一編號</label>
                                        <div class="col-sm-10">
                                            <input type="text" readonly class="form-control-plaintext outline-none" v-bind:value="storeDetail.taxId">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-1 row">
                                        <label class="col-sm-2 col-form-label">負責人</label>
                                        <div class="col-sm-10">
                                            <input type="text" readonly class="form-control-plaintext outline-none" v-bind:value="storeDetail.owner">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-1 row">
                                        <label class="col-sm-2 col-form-label">負責人地址</label>
                                        <div class="col-sm-10">
                                            <input type="text" readonly class="form-control-plaintext outline-none" v-bind:value="storeDetail.address">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="mb-1 row">
                                        <label class="col-sm-2 col-form-label">負責人Email</label>
                                        <div class="col-sm-10">
                                            <input type="email" readonly class="form-control-plaintext outline-none" v-bind:value="storeDetail.ownerEmail">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<edit-store-detail ref="editStoreDetail" v-bind:temp-store="storeDetail" v-bind:model-state-error="modelStateError" v-on:save="SaveStoreDeatil"></edit-store-detail>

<script type="text/javascript">
@section Vue
{
    import { GetStoreProfile, UpateStore } from '@settings.Value.BaseUrl/StaticFiles/Vue/Services/IpassService.js'
    import EditStoreDetail from '@settings.Value.BaseUrl/StaticFiles/Vue/Components/EditStoreDetail.js'
    const uid = '@httpContextAccessor.HttpContext.User.Claims.SingleOrDefault(c => c.Type == "Uid").Value';
    const app = Vue.createApp({
        components: {
            EditStoreDetail
        },
        data: function () {
            return {
                storeDetail: {},
                modelStateError: {}
            }
        },
        created: function () {
            this.GetStoreDetail(uid);
        },
        methods: {
            GetStoreDetail: async function (uid) {
                try {
                    let query = {
                        params: {
                            uid: uid
                        }
                    }
                    const response = await GetStoreProfile(query).then(response => response);
                    const status = response.status;
                    if (status === 200) {
                        const data = response.data;
                        const code = data.rtnCode;
                        const status = this.$common.ChangeReturnCode(code);
                        switch (code) {
                            case 200:
                                this.storeDetail = data.rtnData;
                                break;
                            case 404:
                                this.storeDetail = {};
                                this.$toast.add({ severity: status, summary: data.rtnMessage, detail: data.rtnData, life: 5000, group: 'backend-laoout' });
                                break
                            default:
                                break;
                        }
                    }
                }
                catch (exception) {
                    console.log(exception);
                }
            },
            OpenEditStoreDetail: function () {
                this.modelStateError = { };
                this.$refs.editStoreDetail.Show();
            },
            SaveStoreDeatil: async function (store) {
                try {
                    const response = await UpateStore(store).then(response => response);
                    const status = response.status;
                    if (status === 200) {
                        const responseData = response.data;
                        switch (responseData.rtnCode) {
                            case 200:
                                await this.GetStoreDetail(uid);
                                this.$refs.editStoreDetail.Close();
                                const status = this.$common.ChangeReturnCode(responseData.rtnCode);
                                this.$toast.add({ severity: status, summary: responseData.rtnMessage, detail: '', life: 5000, group: 'backend-laoout' });
                                break;
                            case 401:
                                if (typeof (responseData.rtnData) === 'string') {
                                    this.modelStateError = JSON.parse(responseData.rtnData);
                                }
                                this.$emitter.emit('ServerErrorMessages', this.modelStateError);
                                break;
                            case 404:
                                this.$toast.add({ severity: status, summary: responseData.rtnMessage, detail: '', life: 5000, group: 'backend-laoout' });
                                break;
                            default:
                                throw new Error('代碼有誤');
                                break;
                        }
                    }
                }
                catch (exception) {
                    console.log(exception);
                }
            }

        }
    })
}
</script>
